//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 12.0.21005.1
// 
namespace ClubCloud.Afhangen.UILogic.ClubCloudAuthentication {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginResult", Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class LoginResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CookieNameField;
        
        private ClubCloud.Afhangen.UILogic.ClubCloudAuthentication.LoginErrorCode ErrorCodeField;
        
        private int TimeoutSecondsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string CookieName {
            get {
                return this.CookieNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CookieNameField, value) != true)) {
                    this.CookieNameField = value;
                    this.RaisePropertyChanged("CookieName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ClubCloud.Afhangen.UILogic.ClubCloudAuthentication.LoginErrorCode ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int TimeoutSeconds {
            get {
                return this.TimeoutSecondsField;
            }
            set {
                if ((this.TimeoutSecondsField.Equals(value) != true)) {
                    this.TimeoutSecondsField = value;
                    this.RaisePropertyChanged("TimeoutSeconds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginErrorCode", Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public enum LoginErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoError = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotInFormsAuthenticationMode = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PasswordNotMatch = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationMode", Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public enum AuthenticationMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Windows = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Passport = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Forms = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/", ConfigurationName="ClubCloudAuthentication.AuthenticationSoap")]
    public interface AuthenticationSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/Login", ReplyAction="*")]
        System.Threading.Tasks.Task<ClubCloud.Afhangen.UILogic.ClubCloudAuthentication.LoginResponse> LoginAsync(ClubCloud.Afhangen.UILogic.ClubCloudAuthentication.LoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.microsoft.com/sharepoint/soap/Mode", ReplyAction="*")]
        System.Threading.Tasks.Task<ClubCloud.Afhangen.UILogic.ClubCloudAuthentication.AuthenticationMode> ModeAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LoginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Login", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public ClubCloud.Afhangen.UILogic.ClubCloudAuthentication.LoginRequestBody Body;
        
        public LoginRequest() {
        }
        
        public LoginRequest(ClubCloud.Afhangen.UILogic.ClubCloudAuthentication.LoginRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class LoginRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string username;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string password;
        
        public LoginRequestBody() {
        }
        
        public LoginRequestBody(string username, string password) {
            this.username = username;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LoginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LoginResponse", Namespace="http://schemas.microsoft.com/sharepoint/soap/", Order=0)]
        public ClubCloud.Afhangen.UILogic.ClubCloudAuthentication.LoginResponseBody Body;
        
        public LoginResponse() {
        }
        
        public LoginResponse(ClubCloud.Afhangen.UILogic.ClubCloudAuthentication.LoginResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.microsoft.com/sharepoint/soap/")]
    public partial class LoginResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public ClubCloud.Afhangen.UILogic.ClubCloudAuthentication.LoginResult LoginResult;
        
        public LoginResponseBody() {
        }
        
        public LoginResponseBody(ClubCloud.Afhangen.UILogic.ClubCloudAuthentication.LoginResult LoginResult) {
            this.LoginResult = LoginResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AuthenticationSoapChannel : ClubCloud.Afhangen.UILogic.ClubCloudAuthentication.AuthenticationSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticationSoapClient : System.ServiceModel.ClientBase<ClubCloud.Afhangen.UILogic.ClubCloudAuthentication.AuthenticationSoap>, ClubCloud.Afhangen.UILogic.ClubCloudAuthentication.AuthenticationSoap {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public AuthenticationSoapClient() : 
                base(AuthenticationSoapClient.GetDefaultBinding(), AuthenticationSoapClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.AuthenticationSoap.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AuthenticationSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(AuthenticationSoapClient.GetBindingForEndpoint(endpointConfiguration), AuthenticationSoapClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AuthenticationSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(AuthenticationSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AuthenticationSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(AuthenticationSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AuthenticationSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ClubCloud.Afhangen.UILogic.ClubCloudAuthentication.LoginResponse> ClubCloud.Afhangen.UILogic.ClubCloudAuthentication.AuthenticationSoap.LoginAsync(ClubCloud.Afhangen.UILogic.ClubCloudAuthentication.LoginRequest request) {
            return base.Channel.LoginAsync(request);
        }
        
        public System.Threading.Tasks.Task<ClubCloud.Afhangen.UILogic.ClubCloudAuthentication.LoginResponse> LoginAsync(string username, string password) {
            ClubCloud.Afhangen.UILogic.ClubCloudAuthentication.LoginRequest inValue = new ClubCloud.Afhangen.UILogic.ClubCloudAuthentication.LoginRequest();
            inValue.Body = new ClubCloud.Afhangen.UILogic.ClubCloudAuthentication.LoginRequestBody();
            inValue.Body.username = username;
            inValue.Body.password = password;
            return ((ClubCloud.Afhangen.UILogic.ClubCloudAuthentication.AuthenticationSoap)(this)).LoginAsync(inValue);
        }
        
        public System.Threading.Tasks.Task<ClubCloud.Afhangen.UILogic.ClubCloudAuthentication.AuthenticationMode> ModeAsync() {
            return base.Channel.ModeAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.AuthenticationSoap)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.AuthenticationSoap)) {
                return new System.ServiceModel.EndpointAddress("http://mijn.clubcloud.nl/_vti_bin/Authentication.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return AuthenticationSoapClient.GetBindingForEndpoint(EndpointConfiguration.AuthenticationSoap);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return AuthenticationSoapClient.GetEndpointAddress(EndpointConfiguration.AuthenticationSoap);
        }
        
        public enum EndpointConfiguration {
            
            AuthenticationSoap,
        }
    }
}
